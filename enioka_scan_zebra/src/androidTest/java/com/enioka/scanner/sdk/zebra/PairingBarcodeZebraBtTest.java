package com.enioka.scanner.sdk.zebra;

import android.graphics.Bitmap;

import com.enioka.scanner.bt.api.BarcodePairing;

import org.junit.Assert;
import org.junit.Test;

import java.io.ByteArrayOutputStream;

public class PairingBarcodeZebraBtTest {
    // Wrapper for the test to easily compare the reference barcode with the generated barcode
    public void compareBarcode(int[] ref, Bitmap result) {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        result.compress(Bitmap.CompressFormat.PNG, 100, baos);
        byte[] byteArray = baos.toByteArray();

        Assert.assertEquals("Barcode length mismatch", ref.length, byteArray.length);
        for (int i = 0; i < ref.length; i++) {
            Assert.assertEquals(ref[i], byteArray[i]);
        }
    }
    @Test
    public void testZebraOssDefaultBarcodePairing() {
        int[] refBarcode = new int[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 3, 32, 0, 0, 0, -96, 8, 6, 0, 0, 0, -12, 40, 8, 45, 0, 0, 0, 1, 115, 82, 71, 66, 0, -82, -50, 28, -23, 0, 0, 0, 4, 115, 66, 73, 84, 8, 8, 8, 8, 124, 8, 100, -120, 0, 0, 3, -63, 73, 68, 65, 84, 120, -100, -19, -41, 73, 14, -125, 48, 16, 0, -63, -112, -1, -1, -103, 124, -128, -61, 72, 88, 13, -127, -86, 51, -104, -59, -117, -44, -37, -66, -17, -5, -25, -27, -74, 109, 27, 93, 119, -12, -85, -114, -18, -99, -2, -46, 51, -9, 78, 77, -65, -19, -56, -12, 123, -117, -15, 86, -33, 59, 53, -99, -93, -43, 115, -71, 122, 93, 77, -83, 126, 70, 49, 111, -59, -102, 92, -67, -89, -117, -11, 114, -28, -86, -67, 48, -75, 122, -68, -43, -49, 40, -50, -10, 39, -97, -79, 119, 26, -17, 78, -17, 50, 29, -17, 78, -5, -9, 31, -49, -85, -87, 51, 103, 118, -15, 109, 79, -15, -67, -6, 5, 0, 0, -128, -9, 16, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, -103, 31, 117, 56, 116, 60, 81, 38, 123, -16, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
        final BtZebraProvider provider = new BtZebraProvider();
        Bitmap result = provider.getPairingBarcode();

        compareBarcode(refBarcode, result);
    }

    @Test
    public void testZebraOssLegacyBarcodePairing() {
        int[] refBarcode = new int[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 3, 32, 0, 0, 0, -96, 8, 6, 0, 0, 0, -12, 40, 8, 45, 0, 0, 0, 1, 115, 82, 71, 66, 0, -82, -50, 28, -23, 0, 0, 0, 4, 115, 66, 73, 84, 8, 8, 8, 8, 124, 8, 100, -120, 0, 0, 3, -81, 73, 68, 65, 84, 120, -100, -19, -41, -53, 13, -125, 48, 20, 0, -63, -112, -2, 123, 38, 37, 112, 120, -14, -38, 73, 102, -18, -32, 31, 50, -38, -21, -66, -17, -5, 117, -80, -21, -70, 70, -49, 63, 45, -17, -23, -3, -45, -19, 89, -3, -2, -87, -35, -13, -101, -114, -65, -6, -5, -104, -38, -67, -66, 39, -69, -57, 127, 114, -6, -7, -17, -66, 63, -90, 118, -17, -17, -23, -25, -9, -19, -29, -1, -6, -6, 86, -113, 63, -75, -5, 126, 57, -3, 126, -38, -3, -1, -99, 90, -67, -1, -89, -17, -17, -44, 123, -9, 4, 0, 0, -128, -1, 33, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 31, 126, -25, 80, 60, -23, -69, -9, 88, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
        final BtZebraProvider provider = new BtZebraProvider();
        Bitmap result = provider.getLegacyPairingBarcode();

        compareBarcode(refBarcode, result);
    }

    @Test
    public void testZebraOssCustomLegacyBarcodePairing() {
        int[] refBarcode = new int[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 3, 32, 0, 0, 0, -96, 8, 6, 0, 0, 0, -12, 40, 8, 45, 0, 0, 0, 1, 115, 82, 71, 66, 0, -82, -50, 28, -23, 0, 0, 0, 4, 115, 66, 73, 84, 8, 8, 8, 8, 124, 8, 100, -120, 0, 0, 3, -81, 73, 68, 65, 84, 120, -100, -19, -41, -53, 13, -125, 48, 20, 0, -63, -112, -2, 123, 38, 37, 112, 120, -14, -38, 73, 102, -18, -32, 31, 50, -38, -21, -66, -17, -5, 117, -80, -21, -70, 70, -49, 63, 45, -17, -23, -3, -45, -19, 89, -3, -2, -87, -35, -13, -101, -114, -65, -6, -5, -104, -38, -67, -66, 39, -69, -57, 127, 114, -6, -7, -17, -66, 63, -90, 118, -17, -17, -23, -25, -9, -19, -29, -1, -6, -6, 86, -113, 63, -75, -5, 126, 57, -3, 126, -38, -3, -1, -99, 90, -67, -1, -89, -17, -17, -44, 123, -9, 4, 0, 0, -128, -1, 33, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 31, 126, -25, 80, 60, -23, -69, -9, 88, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
        final BtZebraProvider provider = new BtZebraProvider();
        Bitmap result = provider.getPairingBarcode(BarcodePairing.WithBarcodePairingSupport.PairingType.LEGACY);

        compareBarcode(refBarcode, result);
    }

    @Test
    public void testZebraOssCustomNormalBarcodePairing() {
        int[] refBarcode = new int[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 3, 32, 0, 0, 0, -96, 8, 6, 0, 0, 0, -12, 40, 8, 45, 0, 0, 0, 1, 115, 82, 71, 66, 0, -82, -50, 28, -23, 0, 0, 0, 4, 115, 66, 73, 84, 8, 8, 8, 8, 124, 8, 100, -120, 0, 0, 3, -63, 73, 68, 65, 84, 120, -100, -19, -41, 73, 14, -125, 48, 16, 0, -63, -112, -1, -1, -103, 124, -128, -61, 72, 88, 13, -127, -86, 51, -104, -59, -117, -44, -37, -66, -17, -5, -25, -27, -74, 109, 27, 93, 119, -12, -85, -114, -18, -99, -2, -46, 51, -9, 78, 77, -65, -19, -56, -12, 123, -117, -15, 86, -33, 59, 53, -99, -93, -43, 115, -71, 122, 93, 77, -83, 126, 70, 49, 111, -59, -102, 92, -67, -89, -117, -11, 114, -28, -86, -67, 48, -75, 122, -68, -43, -49, 40, -50, -10, 39, -97, -79, 119, 26, -17, 78, -17, 50, 29, -17, 78, -5, -9, 31, -49, -85, -87, 51, 103, 118, -15, 109, 79, -15, -67, -6, 5, 0, 0, -128, -9, 16, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, -103, 31, 117, 56, 116, 60, 81, 38, 123, -16, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
        final BtZebraProvider provider = new BtZebraProvider();
        Bitmap result = provider.getPairingBarcode(BarcodePairing.WithBarcodePairingSupport.PairingType.NORMAL);

        compareBarcode(refBarcode, result);
    }

    @Test
    public void testZebraOssSetBluetoothHostBarcode() {
        int[] refBarcode = new int[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 3, 32, 0, 0, 0, -96, 8, 6, 0, 0, 0, -12, 40, 8, 45, 0, 0, 0, 1, 115, 82, 71, 66, 0, -82, -50, 28, -23, 0, 0, 0, 4, 115, 66, 73, 84, 8, 8, 8, 8, 124, 8, 100, -120, 0, 0, 3, -87, 73, 68, 65, 84, 120, -100, -19, -41, -79, 17, -61, 32, 16, 0, 65, -53, -3, -9, -116, 75, 32, 120, -5, -112, 71, -69, 57, -120, 121, 65, 112, -41, 90, 107, -67, -8, -102, -21, -70, 70, -21, 119, -65, 99, -73, -1, -12, 119, -2, 122, -1, -87, -23, 124, 119, -90, -13, -65, -5, -9, 79, -17, 63, 53, -67, -97, -89, -17, -9, -23, -9, 59, 117, -6, 124, 119, -65, -65, -89, -25, -1, -17, -9, 107, -25, -18, -17, -13, -41, -21, 119, 78, -49, 103, -22, -23, -13, 125, -102, -9, -23, 3, 0, 0, 0, -49, 33, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 31, 18, -117, 71, 60, 97, 78, -26, -60, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
        final BtZebraProvider provider = new BtZebraProvider();
        Bitmap result = provider.zebraSetBluetoothHostBarcode();

        compareBarcode(refBarcode, result);
    }

    @Test
    public void testZebraOssConnectToAddressBarcode() {
        int[] refBarcode = new int[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 3, 32, 0, 0, 0, -96, 8, 6, 0, 0, 0, -12, 40, 8, 45, 0, 0, 0, 1, 115, 82, 71, 66, 0, -82, -50, 28, -23, 0, 0, 0, 4, 115, 66, 73, 84, 8, 8, 8, 8, 124, 8, 100, -120, 0, 0, 3, -73, 73, 68, 65, 84, 120, -100, -19, -41, 65, 18, -125, 32, 16, 0, -63, -104, -1, -1, -39, -4, -128, -61, 86, 49, -63, -92, -5, 46, 8, -88, -27, 92, -9, 125, -33, -81, 7, -70, -82, 107, 116, -35, 106, -71, -85, 49, -89, -37, -76, 99, -52, -87, -23, -98, -83, 76, -9, -13, -92, -7, 118, 60, 19, -11, -71, -17, 88, -5, -44, -114, 61, -101, -86, -25, 91, -87, -97, -35, -107, -6, 91, 55, 117, -46, -5, 62, 29, 115, -27, 23, -26, -5, -123, 53, 76, -25, 59, -23, 127, 98, -121, -89, -100, -47, -54, 73, -33, -91, -109, -34, -93, 19, -68, -65, 125, 3, 0, 0, -64, -1, 16, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, -103, 15, -119, 99, 89, 60, 48, -110, -28, -111, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
        final BtZebraProvider provider = new BtZebraProvider();
        Bitmap result = provider.zebraConnectToAddressBarcode();

        compareBarcode(refBarcode, result);
    }

    @Test
    public void testZebraOssDefaultFactoryBarcode() {
        int[] refBarcode = new int[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 3, 32, 0, 0, 0, -96, 8, 6, 0, 0, 0, -12, 40, 8, 45, 0, 0, 0, 1, 115, 82, 71, 66, 0, -82, -50, 28, -23, 0, 0, 0, 4, 115, 66, 73, 84, 8, 8, 8, 8, 124, 8, 100, -120, 0, 0, 3, -91, 73, 68, 65, 84, 120, -100, -19, -41, -47, 17, -125, 32, 20, 0, -63, -112, -2, 123, 38, 45, -16, -63, 28, 68, 119, 11, 80, -16, -95, -50, -115, 57, -25, -4, -68, -56, 24, 99, -21, -11, 86, 31, -33, -22, 125, 119, -113, -29, -44, 125, 119, -37, 61, -73, 85, -69, -25, -69, -37, -87, -11, -99, 58, -9, -89, -10, -79, -37, -19, -17, -27, 83, -42, -73, -22, -10, 125, 60, -27, 59, -76, -22, -10, -7, -34, 62, -73, -37, -49, -13, 110, -2, 71, -1, -23, 123, 122, 1, 0, 0, -64, 123, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -52, 15, 40, -37, 62, 60, 66, -103, -93, -82, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
        final BtZebraProvider provider = new BtZebraProvider();
        Bitmap result = provider.defaultSettingsBarcode(BarcodePairing.WithBarcodePairingSupport.Defaults.FACTORY);

        compareBarcode(refBarcode, result);
    }

    @Test
    public void testZebraOssDefaultResetBarcode() {
        int[] refBarcode = new int[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 3, 32, 0, 0, 0, -96, 8, 6, 0, 0, 0, -12, 40, 8, 45, 0, 0, 0, 1, 115, 82, 71, 66, 0, -82, -50, 28, -23, 0, 0, 0, 4, 115, 66, 73, 84, 8, 8, 8, 8, 124, 8, 100, -120, 0, 0, 3, -95, 73, 68, 65, 84, 120, -100, -19, -41, -79, 17, -61, 32, 16, 0, 65, -29, -2, 123, -58, 13, 56, 80, -16, 115, 104, -92, -35, 2, 4, -30, 33, -72, -75, -9, -34, -97, 23, 89, 107, -115, 126, -17, -22, -15, 93, 93, 119, 122, 28, -89, -42, -99, 54, 61, -73, -85, -90, -25, 59, -19, -44, -2, 78, -35, -5, 83, -1, 49, -19, -18, -17, -46, -36, -2, 123, -54, -36, -90, -35, -3, 30, 56, -105, -58, 83, -50, -7, 109, 115, 59, -27, 123, 122, 3, 0, 0, -64, 123, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -52, 15, -127, -23, 62, 60, 92, 106, -33, -82, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
        final BtZebraProvider provider = new BtZebraProvider();
        Bitmap result = provider.defaultSettingsBarcode(BarcodePairing.WithBarcodePairingSupport.Defaults.RESTORE);


        compareBarcode(refBarcode, result);
    }
}
