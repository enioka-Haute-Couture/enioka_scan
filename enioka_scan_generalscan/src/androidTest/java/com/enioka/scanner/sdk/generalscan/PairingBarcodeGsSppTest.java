package com.enioka.scanner.sdk.generalscan;

import android.graphics.Bitmap;

import com.enioka.scanner.bt.api.BarcodePairing;

import org.junit.Assert;
import org.junit.Test;

import java.io.ByteArrayOutputStream;

public class PairingBarcodeGsSppTest {
    // Wrapper for the test to easily compare the reference barcode with the generated barcode
    public void compareBarcode(int[] ref, Bitmap result) {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        result.compress(Bitmap.CompressFormat.PNG, 100, baos);
        byte[] byteArray = baos.toByteArray();

        Assert.assertEquals("Barcode length mismatch", ref.length, byteArray.length);
        for (int i = 0; i < ref.length; i++) {
            Assert.assertEquals(ref[i], byteArray[i]);
        }
    }

    @Test
    public void testGsSppBarcodePairing() {
        int[] refBarcode = new int[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 3, 32, 0, 0, 0, -96, 8, 6, 0, 0, 0, -12, 40, 8, 45, 0, 0, 0, 1, 115, 82, 71, 66, 0, -82, -50, 28, -23, 0, 0, 0, 4, 115, 66, 73, 84, 8, 8, 8, 8, 124, 8, 100, -120, 0, 0, 3, -58, 73, 68, 65, 84, 120, -100, -19, -41, 49, -110, -61, 32, 16, 0, -63, -45, -3, -1, -49, 114, -82, -64, 91, 20, -46, -72, 92, -18, 78, -123, 88, 32, -101, -29, 60, -49, -13, -17, -117, 28, -57, -15, -10, -5, -11, 58, -41, -11, -45, 117, 87, -41, 79, -90, -13, 94, -83, -98, 111, -6, 127, -9, -2, -45, -2, -85, -1, -17, -18, 55, -35, -17, -23, 121, -45, -6, 105, -34, -35, -5, -81, -50, -101, -42, -33, 61, 127, -38, -49, -5, 122, -33, -107, 121, -45, -6, -69, -25, 79, -5, 121, 95, -17, -69, 50, 111, 90, -65, 58, 127, 119, -34, -18, -7, -82, -98, 126, -81, -35, -1, -65, -19, -2, 79, -97, -9, -45, -2, 63, 125, 0, 0, 0, -32, 119, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -52, 11, -50, -65, -104, 60, -13, 18, -67, -88, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
        final GsSppScannerProvider provider = new GsSppScannerProvider();
        Bitmap result = provider.getPairingBarcode();

        compareBarcode(refBarcode, result);
    }

    @Test
    public void testGsSppActivateBluetooth() {
        int[] refBarcode = new int[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 3, 32, 0, 0, 0, -96, 8, 6, 0, 0, 0, -12, 40, 8, 45, 0, 0, 0, 1, 115, 82, 71, 66, 0, -82, -50, 28, -23, 0, 0, 0, 4, 115, 66, 73, 84, 8, 8, 8, 8, 124, 8, 100, -120, 0, 0, 3, -90, 73, 68, 65, 84, 120, -100, -19, -41, -55, 13, -125, 48, 0, 0, -63, 56, -3, -9, -20, -108, -32, -121, -61, -126, -52, -52, 31, -97, 66, -80, 99, -50, 57, 63, -4, -51, 24, 99, -21, -7, -43, 117, -84, -58, -33, -67, -50, -35, -11, -81, -36, -67, -66, -35, -13, -35, 29, 127, -27, -12, -7, 79, -33, -33, -35, -13, -97, -66, -65, -35, -7, -81, -2, -36, -99, -66, -1, -89, -97, -17, -45, -33, -113, -107, -45, -41, -73, 114, -11, -1, -49, -45, -49, -9, 109, -66, 119, 47, 0, 0, 0, 120, 15, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, 17, 32, 0, 0, 64, 70, -128, 0, 0, 0, 25, 1, 2, 0, 0, 100, 4, 8, 0, 0, -112, -7, 1, -14, 7, 71, 60, -68, 41, -127, -74, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
        final GsSppScannerProvider provider = new GsSppScannerProvider();
        Bitmap result = provider.activateBluetoothBarcode();

        compareBarcode(refBarcode, result);
    }

    @Test
    public void testGsSppDefaultSettings() {
        int[] refBarcode = new int[]{-119, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 3, 32, 0, 0, 0, -96, 8, 6, 0, 0, 0, -12, 40, 8, 45, 0, 0, 0, 1, 115, 82, 71, 66, 0, -82, -50, 28, -23, 0, 0, 0, 4, 115, 66, 73, 84, 8, 8, 8, 8, 124, 8, 100, -120, 0, 0, 3, -90, 73, 68, 65, 84, 120, -100, -19, -41, 59, 2, -126, 48, 20, 0, 65, -29, -3, -17, 28, 107, -85, 20, -111, 5, 97, -90, -121, 124, 30, 20, 59, -26, -100, -13, -59, -49, -116, 49, -74, -98, 95, -115, 99, -11, -2, -35, 113, -18, -18, 127, -27, -20, -3, 29, -67, -2, -47, -65, -45, -43, -25, -65, -5, -3, -18, -66, 127, -27, -18, -21, -33, -3, 124, 79, 95, -1, -22, -25, 59, -5, -2, 86, -2, -3, 126, -113, 94, 127, -27, -22, -13, -71, -6, 124, -7, -10, 62, 123, 3, 0, 0, -64, 115, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -116, 0, 1, 0, 0, 50, 2, 4, 0, 0, -56, 8, 16, 0, 0, 32, 35, 64, 0, 0, -128, -52, 7, -46, -72, 71, 60, 64, -58, -67, -20, 0, 0, 0, 0, 73, 69, 78, 68, -82, 66, 96, -126};
        final GsSppScannerProvider provider = new GsSppScannerProvider();
        Bitmap result = provider.defaultSettingsBarcode(BarcodePairing.WithBarcodePairingSupport.Defaults.FACTORY);

        compareBarcode(refBarcode, result);
    }
}
