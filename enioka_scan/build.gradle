apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    lintOptions {
        disable 'ExpiredTargetSdkVersion'
    }
    defaultConfig {
        minSdkVersion 19
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 28
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
    from android.sourceSets.main.kotlin.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId 'com.enioka.scanner'
                artifactId 'scanner'
                version System.getenv("LIB_VERSION")

                from components.release

                pom {
                    name = 'Enioka Scan'
                    description = 'A library that makes the integration of all barcode scanners easy in any Android application, avoiding vendor lock-in and lowering the cost of advanced scanner integration.'
                    url = 'https://github.com/enioka/enioka_scan'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    scm {
                        connection = 'scm:git:github.com/enioka/enioka_scan.git'
                        developerConnection = 'scm:git:ssh://github.com/enioka/enioka_scan.git'
                        url = 'https://github.com/enioka/enioka_scan/tree/master'
                    }
                    developers {
                        developer {
                            id = 'mag'
                            name = 'Marc-Antoine Gouillart'
                            email = 'mag@enioka.com'
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name = "OSSRH"
                url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                credentials {
                    username = System.getenv("OSSRH_LOGIN")
                    password = System.getenv("OSSRH_PASSWORD")
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
            System.getenv("SIGN_KEYID"),
            System.getenv("SIGN_KEY"),
            System.getenv("SIGN_PASSWORD")
    )
    sign publishing.publications
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
}

dependencies {
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    // ZBAR & ZXING (Zebra Crossing) = camera. From Maven Central.
    api 'me.dm7.barcodescanner:zbar:1.9.13'
    api 'com.google.zxing:core:3.4.0'

    // Test things (useless for now)
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation project(path: ':enioka_scan_mock')
    testImplementation 'junit:junit:4.12'
}
